version: '3.8'

services:
  # Base de donn√©es MongoDB
  mongodb:
    image: mongo:7.0
    container_name: mesnotescolab-mongodb
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: mesnotescolab
    volumes:
      - mongodb_data:/data/db
      - ./docker/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - mesnotescolab-network
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # API Backend
  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    container_name: mesnotescolab-backend
    restart: unless-stopped
    ports:
      - "5000:5000"
    environment:
      NODE_ENV: production
      PORT: 5000
      MONGODB_URI: mongodb://admin:password123@mongodb:27017/mesnotescolab?authSource=admin
      JWT_SECRET: jwt_secret_production_ultra_securise_2024
      JWT_EXPIRES_IN: 7d
      EMAIL_USER: noreply@mesnotescolab.com
      EMAIL_PASS: password_email_production
      CLIENT_URL: http://localhost:3000
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - mesnotescolab-network
    healthcheck:
      test: ["CMD", "node", "healthcheck.js"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    volumes:
      - ./logs:/app/logs

  # Frontend React
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        REACT_APP_API_URL: http://localhost:5000/api
    container_name: mesnotescolab-frontend
    restart: unless-stopped
    ports:
      - "3000:80"
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - mesnotescolab-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Service de monitoring (optionnel)
  redis:
    image: redis:7-alpine
    container_name: mesnotescolab-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - mesnotescolab-network
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  mongodb_data:
    driver: local
  redis_data:
    driver: local

networks:
  mesnotescolab-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16